#342C1 Andrada-Ioana Cojocaru

The project was implemented using Django for the API and PostgreSQL for the DB and pgAdmin4 for 
the GUI of the DB.

Firstly, I prefered to have the setup locally, so I have installed python, django, django-environ and setup an env for this. I opened pgAdmin4 and create the database, that I have added in the app an .env
file with secret_key, host, database_name, database_password, database_user and used this in the settings in DATABASES.

For starting the project I ran "django-admin startproject postgresTest"; to run the first app I
used "python manage.py startapp weather_project"; to run the app "python manage.py runserver"

Django is a MVC framework, so I implemented the models in model.py from db, added in settings.py INSTALLED PROJECTS - db and after run "python manage.py makemigrations", installed psycopg2 and then
"python manage.py migrate". Now I have all the tables in my db. The next step was to add the logic in the views.py and routes in urls.py.

I had a problem with the routes and I changed the settings in Django
When APPEND_SLASH is set to True (which is the default), Django appends a trailing slash
to URLs that don't end with one. 
This can cause an issue with POST requests because Django doesn't redirect POST requests.
APPEND_SLASH = False

For the containerization part, I created an image for my app(Dockerfile) I created "pip freeze > requirements.txt" to install all that I have installed initiallly and also libpq5.
I included a .dockerignore file to make the image smaller and not contain sensitive data or garbage files.
I have created a docker-compose for the 3 services: django, db, pgadmin4 (interface for db - connect with the credentials that are included in the file), that are in different networks and saves the state of the db (using volumes).

To run the docker-compose:
docker-compose up --build

In Postman, I have modify the port in 8000 and run all the tests in order.

I used this resources for resolving the homewark:
https://stackpython.medium.com/how-to-start-django-project-with-a-database-postgresql-aaa1d74659d8
https://docs.djangoproject.com/en/4.2/ref/csrf/
https://learndjango.com/tutorials/django-docker-and-postgresql-tutorial
https://shisho.dev/blog/posts/how-to-use-dockerignore/
https://medium.com/@marvinjungre/get-postgresql-and-pgadmin-4-up-and-running-with-docker-4a8d81048aea

